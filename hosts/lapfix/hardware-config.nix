# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];
  boot = {
    initrd.availableKernelModules = ["nvme" "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod"];
    initrd.kernelModules = [];
    kernelModules = ["kvm-amd"];
    extraModulePackages = [];
  };

  fileSystems = {
    "/windows" = {
      device = "/dev/disk/by-uuid/BC34BD5734BD14FC";
      fsType = "ntfs";
    };
    "/" = {
      device = "/dev/disk/by-uuid/6000b901-622b-490d-8170-141054e3a14b";
      fsType = "btrfs";
      options = ["subvol=root" "compress=zstd"];
    };

    "/home" = {
      device = "/dev/disk/by-uuid/6000b901-622b-490d-8170-141054e3a14b";
      fsType = "btrfs";
      options = ["subvol=home" "compress=zstd"];
    };

    "/nix" = {
      device = "/dev/disk/by-uuid/6000b901-622b-490d-8170-141054e3a14b";
      fsType = "btrfs";
      options = ["subvol=nix" "noatime" "compress=zstd"];
    };
    "/SteamLibrary" = {
      device = "/dev/disk/by-uuid/6000b901-622b-490d-8170-141054e3a14b";
      fsType = "btrfs";
      options = ["subvol=SteamLibrary" "compress=zstd"];
    };

    "/boot" = {
      device = "/dev/disk/by-uuid/0F54-4904";
      fsType = "vfat";
    };
  };

  swapDevices = [];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp34s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
